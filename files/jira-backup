#!/bin/bash

CONFIG_FILE='/etc/jira-backup.conf'
TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')

if [ -e ${CONFIG_FILE} ]; then
    source ${CONFIG_FILE}
else
    echo "Error: ${CONFIG_FILE} missing"
    exit 1
fi

ATTACHMENT_BACKUP_OUTPUT="${BACKUP_DIR}/jira-attachments-${TIMESTAMP}.tar"
ATTACHMENT_BACKUP_REMOVE="${BACKUP_DIR}/jira-attachments-*.tar"
DATABASE_DUMP_OUTPUT="${BACKUP_DIR}/jira-database-dump-${TIMESTAMP}.sql"
DATABASE_DUMP_REMOVE="${BACKUP_DIR}/jira-database-dump-*.sql"


function setup() {
    if [ ! -d "${BACKUP_DIR}" ]; then
        echo "Creating ${BACKUP_DIR}"
        mkdir -p "${BACKUP_DIR}"
    fi
}

function remove_old_files() {
    if [ -n "${KEEP_DAYS}" ] then
        find $0 -mtime +${KEEP_DAYS} -exec rm {} \;
    fi
}

function remove_old_attachment_backups() {
    echo "Removing old Jira attachment backups"	
    remove_old_files ${ATTACHMENT_BACKUP_REMOVE}
}

function remove_old_database_dumps() {
    echo "Removing old Jira database dumps"
    remove_old_files {$DATABASE_DUMP_REMOVE}
}


function backup_attachments() {
    if [ -z "${ATTACHMENTS_PATH}" ] then
        echo "Skipping Jira attachments backup"
    else
	 echo "Backing up Jira attachments"
         /bin/tar -cpf ${ATTACHMENT_BACKUP_OUTPUT} ${ATTACHMENTS_PATH}
         echo "Created ${ATTACHMENT_BACKUP_OUTPUT}"
    fi
}

function dump_database() {
    if [ -z "$DB_NAME" ] then
        echo "Skiping Jira database dump."
    else
        echo "Dumping Jira database"
        /usr/bin/pg_dump -U "${DB_USER}" "${DB_NAME}" -h "${DB_HOST}" > "${DATABASE_DUMP_OUTPUT}"
        echo "Created ${DATABASE_DUMP_OUTPUT}"
    fi
}

function main() {
    echo "Backing up Jira"
    setup
    remove_old_attachment_backups
    remove_old_database_dumps
    backup_attachments
    dump_database
}

main
